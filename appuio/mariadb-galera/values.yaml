## Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

global:
  # -- Global Docker image registry
  imageRegistry: ""
  # -- Global Docker registry secret names as an array
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  imagePullSecrets: []
  # -- Global StorageClass for Persistent Volume(s)
  storageClass: ""

## Common parameters

# -- String to partially override common.names.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override common.names.fullname template with a string
fullnameOverride: ""
# -- Name of the Kubernetes scheduler (other than default)
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
schedulerName: ""
# -- Kubernetes DNS Domain name to use
clusterDomain: cluster.local
# -- Array of extra objects to deploy with the release (evaluated as a template)
extraDeploy: []

## Diagnostic mode in the deployment
diagnosticMode:
  # -- Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  enabled: false
  # -- Command to override all containers in the deployment
  command:
    - sleep
  # -- Args to override all containers in the deployment
  args:
    - infinity

## MariaDB Galera parameters

## Bitnami MariaDB Galera image
## ref: https://hub.docker.com/r/bitnami/mariadb-galera/tags/
##
image:
  # -- MariaDB Galera image registry
  registry: docker.io
  # -- MariaDB Galera image repository
  repository: bitnami/mariadb-galera
  # -- MariaDB Galera image tag (immutable tags are recommended)
  tag: 10.7.4-debian-10-r1
  # -- MariaDB Galera image pull policy.
  # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Example:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  # -- Specify docker-registry secret names as an array
  pullSecrets: []
  # -- Specify if debug logs should be enabled
  ## Set to true if you would like to see extra information on logs
  debug: false
# -- StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees.
# There are two valid pod management policies: OrderedReady and Parallel
## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
##
podManagementPolicy: OrderedReady
# -- Add deployment host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## MariaDB Gallera K8s svc properties
##
service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- MariaDB service port
  port: 3306
  # -- Specific cluster IP when service type is cluster IP. Use `None` for headless service
  ## e.g:
  ## clusterIP: None
  ##
  clusterIP: ""
  # -- Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ## e.g:
  ## nodePort: 30001
  ##
  nodePort: ""
  # -- External IP list to use with ClusterIP service type
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
  ##
  externalIPs: []
  # -- `loadBalancerIP` if service type is `LoadBalancer`
  ## Set the LoadBalancer service type to internal only
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  loadBalancerIP: ""
  # -- Addresses that are allowed when svc is `LoadBalancer`
  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ##
  ## loadBalancerSourceRanges:
  ## - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  # -- Additional annotations for MariaDB Galera service
  ## This can be used toset the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  ## Headless service properties
  ##
  headless:
    # -- Annotations for the headless service. May be useful for setting `service.alpha.kubernetes.io/tolerate-unready-endpoints="true"` when using peer-finder.
    ##
    annotations: {}
## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  # -- Specify whether a ServiceAccount should be created
  ##
  create: false
  # -- The name of the ServiceAccount to create
  # If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
# -- Array containing extra env vars to configure MariaDB Galera replicas
## For example:
## extraEnvVars:
##  - name: TZ
##    value: "Europe/Paris"
##
extraEnvVars: []
# -- ConfigMap containing extra env vars to configure MariaDB Galera replicas
##
extraEnvVarsCM: ""
# -- Secret containing extra env vars to configure MariaDB Galera replicas
##
extraEnvVarsSecret: ""
## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  # -- Specify whether RBAC resources should be created and used
  create: false
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  # -- Enable security context
  enabled: true
  # -- Group ID for the container filesystem
  fsGroup: 1001
  # -- User ID for the container
  runAsUser: 1001
## Database credentials for root (admin) user
##
rootUser:
  # -- Username for the admin user.
  user: root
  # -- Password for the admin user. Ignored if existing secret is provided.
  # Password is ignored if existingSecret is specified.
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb-galera#setting-the-root-password-on-first-run
  ##
  password: ""
  # -- Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
  # If it is not force, a random password will be generated.
  ##
  forcePassword: false
# -- Use existing secret for password details (`rootUser.password`, `db.password`, `galera.mariabackup.password` will be ignored and picked up from this secret)
# The secret has to contain the keys mariadb-root-password, mariadb-galera-mariabackup-password and mariadb-password.
existingSecret: ""
# -- Mount credentials as a files instead of using an environment variable.
usePasswordFiles: false
# -- Use custom password files when `usePasswordFiles` is set to `true`. Define path for keys `root`, `user`, and `mariabackup`.
## Example:
## customPasswordFiles:
##   root: /vault/secrets/mariadb-root
##   user: /vault/secrets/mariadb-user
##   mariabackup: /vault/secrets/mariadb-galera-mariabackup
##
customPasswordFiles: {}
## Custom db configuration
##
db:
  # -- Username of new user to create
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb-galera#creating-a-database-user-on-first-run
  user: ""
  # -- Password for the new user. Ignored if existing secret is provided.
  password: ""
  # -- Name for new database to create
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb-galera#creating-a-database-on-first-run
  name: my_database
  # -- Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
  ## If it is not force, a random password will be generated.
  forcePassword: false
## Galera configuration
##
galera:
  # -- Galera cluster name
  name: galera
  ## Bootstraping options
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb-galera#bootstraping
  bootstrap:
    # -- Node to bootstrap from, you will need to change this parameter in case you want to bootstrap from other node
    bootstrapFromNode: ""
    # -- Force `safe_to_bootstrap: 1` in `grastate.date` file.
    # This will set safe_to_bootstrap=1 in the node indicated by bootstrapFromNode.
    forceSafeToBootstrap: false
  ## Credentials to perform backups
  ##
  mariabackup:
    # -- MariaBackup username
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb-galera#setting-up-a-multi-master-cluster
    user: mariabackup
    # -- MariaBackup password. Password is ignored if existingSecret is specified.
    password: ""
    # -- Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
    ## If it is not force, a random password will be generated.
    forcePassword: false
## LDAP configuration
##
ldap:
  # -- Enable LDAP support
  enabled: false
  # -- LDAP URL beginning in the form `ldap
  uri: ""
  # -- LDAP base DN
  base: ""
  # --DAP bind DN
  binddn: ""
  # -- LDAP bind password
  bindpw: ""
  # -- LDAP base lookup
  bslookup: ""
  # -- LDAP custom filter
  filter: ""
  # -- LDAP custom map
  map: ""
  # -- LDAP ignored users
  nss_initgroups_ignoreusers: root,nslcd
  # -- LDAP search scope
  scope: ""
  # -- LDAP TLS check on server certificates
  tls_reqcert: ""
## TLS configuration
##
tls:
  # -- Enable TLS support for replication traffic
  enabled: false
  # -- Generate automatically self-signed TLS certificates
  autoGenerated: false
  # -- Name of the secret that contains the certificates
  certificatesSecret: ""
  # -- Certificate filename
  certFilename: ""
  # -- Certificate key filename
  certKeyFilename: ""
  # -- CA Certificate filename
  certCAFilename: ""
# -- Configuration for the MariaDB server
## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
## Alternatively, you can put your my.cnf under the files/ directory
# @default -- See values.yaml
mariadbConfiguration: |-
  [client]
  port=3306
  socket=/opt/bitnami/mariadb/tmp/mysql.sock
  plugin_dir=/opt/bitnami/mariadb/plugin

  [mysqld]
  default_storage_engine=InnoDB
  basedir=/opt/bitnami/mariadb
  datadir=/bitnami/mariadb/data
  plugin_dir=/opt/bitnami/mariadb/plugin
  tmpdir=/opt/bitnami/mariadb/tmp
  socket=/opt/bitnami/mariadb/tmp/mysql.sock
  pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
  bind_address=0.0.0.0

  ## Character set
  ##
  collation_server=utf8_unicode_ci
  init_connect='SET NAMES utf8'
  character_set_server=utf8

  ## MyISAM
  ##
  key_buffer_size=32M
  myisam_recover_options=FORCE,BACKUP

  ## Safety
  ##
  skip_host_cache
  skip_name_resolve
  max_allowed_packet=16M
  max_connect_errors=1000000
  sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY
  sysdate_is_now=1

  ## Binary Logging
  ##
  log_bin=mysql-bin
  expire_logs_days=14
  # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
  sync_binlog=0
  # Required for Galera
  binlog_format=row

  ## Caches and Limits
  ##
  tmp_table_size=32M
  max_heap_table_size=32M
  # Re-enabling as now works with Maria 10.1.2
  query_cache_type=1
  query_cache_limit=4M
  query_cache_size=256M
  max_connections=500
  thread_cache_size=50
  open_files_limit=65535
  table_definition_cache=4096
  table_open_cache=4096

  ## InnoDB
  ##
  innodb=FORCE
  innodb_strict_mode=1
  # Mandatory per https://github.com/codership/documentation/issues/25
  innodb_autoinc_lock_mode=2
  # Per https://www.percona.com/blog/2006/08/04/innodb-double-write/
  innodb_doublewrite=1
  innodb_flush_method=O_DIRECT
  innodb_log_files_in_group=2
  innodb_log_file_size=128M
  innodb_flush_log_at_trx_commit=1
  innodb_file_per_table=1
  # 80% Memory is default reco.
  # Need to re-evaluate when DB size grows
  innodb_buffer_pool_size=2G
  innodb_file_format=Barracuda

  ## Logging
  ##
  log_error=/opt/bitnami/mariadb/logs/mysqld.log
  slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
  log_queries_not_using_indexes=1
  slow_query_log=1

  ## SSL
  ## Use extraVolumes and extraVolumeMounts to mount /certs filesystem
  # ssl_ca=/certs/ca.pem
  # ssl_cert=/certs/server-cert.pem
  # ssl_key=/certs/server-key.pem

  [galera]
  wsrep_on=ON
  wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
  wsrep_sst_method=mariabackup
  wsrep_slave_threads=4
  wsrep_cluster_address=gcomm://
  wsrep_cluster_name=galera
  wsrep_sst_auth="root:"
  # Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit
  innodb_flush_log_at_trx_commit=2
  # MYISAM REPLICATION SUPPORT #
  wsrep_replicate_myisam=ON

  [mariadb]
  plugin_load_add=auth_pam

  ## Data-at-Rest Encryption
  ## Use extraVolumes and extraVolumeMounts to mount /encryption filesystem
  # plugin_load_add=file_key_management
  # file_key_management_filename=/encryption/keyfile.enc
  # file_key_management_filekey=FILE:/encryption/keyfile.key
  # file_key_management_encryption_algorithm=AES_CTR
  # encrypt_binlog=ON
  # encrypt_tmp_files=ON

  ## InnoDB/XtraDB Encryption
  # innodb_encrypt_tables=ON
  # innodb_encrypt_temporary_tables=ON
  # innodb_encrypt_log=ON
  # innodb_encryption_threads=4
  # innodb_encryption_rotate_key_age=1

  ## Aria Encryption
  # aria_encrypt_tables=ON
  # encrypt_tmp_disk_tables=ON
# -- ConfigMap with the MariaDB configuration files (Note: Overrides `mariadbConfiguration`). The value is evaluated as a template.
configurationConfigMap: ""
# -- Specify dictionary of scripts to be run at first boot
## Alternatively, you can put your scripts under the files/docker-entrypoint-initdb.d directory
## e.g:
## initdbScripts:
##   my_init_script.sh: |
##      #!/bin/sh
##      echo "Do something."
##
initdbScripts: {}
# -- ConfigMap with the initdb scripts (Note: Overrides `initdbScripts`)
initdbScriptsConfigMap: ""
# -- MariaDB additional command line flags
## Can be used to specify command line flags, for example:
## e.g:
## extraFlags: "--max-connect-errors=1000 --max_connections=155"
##
extraFlags: ""
# -- Desired number of cluster nodes
replicaCount: 3
# -- updateStrategy for MariaDB Master StatefulSet
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
updateStrategy:
  type: RollingUpdate
# -- Extra labels for MariaDB Galera pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}
# -- Annotations for MariaDB Galera  pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# -- Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
podAffinityPreset: ""
# -- Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  # -- Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  type: ""
  # -- Node label key to match. Ignored if `affinity` is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  key: ""
  # -- Node label values to match. Ignored if `affinity` is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  values: []
# -- Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
# -- Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
# -- Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
# -- Force update the StatefulSet.
# If enabled the chart will recreate the StatefulSet without touching the Pods (cascade orphan), allowing you to update locked field, such as PVC size.
# Currently only changes to PVC size are supported.
forceUpdate: false
# -- Image used to recreate the StatefulSet. Needs to have `kubectl` and `jq` in its `$PATH`
forceUpdateKubectlImage: "quay.io/bitnami/kubectl"
## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  # -- Enable persistence using PVC
  enabled: true
  # -- Provide an existing `PersistentVolumeClaim`
  existingClaim: ""
  # -- Subdirectory of the volume to mount
  subPath: ""
  # -- Path to mount the volume at
  mountPath: /bitnami/mariadb
  # -- Selector to match an existing Persistent Volume (this value is evaluated as a template)
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
  # -- Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  # -- Persistent Volume Claim annotations
  ##
  annotations: {}
  # -- Persistent Volume Access Modes
  ##
  accessModes:
    - ReadWriteOnce
  # -- Persistent Volume Size
  ##
  size: 8Gi
# -- Priority Class Name for Statefulset
priorityClassName: ""
# -- Additional init containers (this value is evaluated as a template)
## extraInitContainers:
## - name: do-something
##   image: bitnami/minideb
##   command: ['do', 'something']
extraInitContainers: []
# -- Additional containers (this value is evaluated as a template)
##
extraContainers: []
## extraVolumes and extraVolumeMounts allows you to mount other volumes
## Example Use Cases:
##  mount certificates to enable data-in-transit encryption
##  mount keys for data-at-rest encryption using file plugin
## e.g:
## extraVolumes:
## - name: mariadb-certs
##   secret:
##     defaultMode: 288
##     secretName: mariadb-certs
## - name: mariadb-encryption
##   secret:
##     defaultMode: 288
##     secretName: mariadb-encryption
##
# -- Extra volumes
extraVolumes: []
## extraVolumeMounts:
## - name: mariadb-certs
##   mountPath: /certs
##   readOnly: true
## - name: mariadb-encryption
##   mountPath: /encryption
##   readOnly: true
##
# -- Mount extra volume(s)
extraVolumeMounts: []
## MariaDB Galera containers' resource requests and limits
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
##
resources:
  ## Example:
  ## limits:
  ##    cpu: 0.5
  ##    memory: 256Mi
  # -- The resources limits for the container
  limits: {}
  ## Examples:
  ## requests:
  ##    cpu: 0.5
  ##    memory: 256Mi
  # -- The requested resources for the container
  requests: {}
## MariaDB Galera containers' liveness probe
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
  # -- Turn on and off liveness probe
  enabled: true
  ## Initializing the database could take some time
  # -- Delay before liveness probe is initiated
  initialDelaySeconds: 120
  # -- How often to perform the probe
  periodSeconds: 10
  # -- When the probe times out
  timeoutSeconds: 5
  # -- consecutive successes for the probe
  successThreshold: 1
  # -- Minimum consecutive failures for the probe
  failureThreshold: 3
## MariaDB Galera containers' readiness probe
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
readinessProbe:
  # -- Turn on and off readiness probe
  enabled: true
  # -- Delay before readiness probe is initiated
  initialDelaySeconds: 30
  # -- How often to perform the probe
  periodSeconds: 10
  # -- When the probe times out
  timeoutSeconds: 5
  # -- Minimum consecutive successes for the probe
  successThreshold: 1
  # -- Minimum consecutive failures for the probe
  failureThreshold: 3
## MariaDB Galera containers' startup probe
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
startupProbe:
  # -- Turn on and off startup probe
  enabled: false
  ## Initializing the database could take some time
  # -- Delay before startup probe is initiated
  initialDelaySeconds: 120
  # -- How often to perform the probe
  periodSeconds: 10
  # -- When the probe times out
  timeoutSeconds: 5
  # -- Minimum consecutive successes for the probe
  successThreshold: 1
  ## Let's wait 600 seconds by default, it should give enough time in any cluster for mysql to init
  # -- Minimum consecutive failures for the probe
  failureThreshold: 48
## Pod disruption budget configuration
##
podDisruptionBudget:
  # -- Specifies whether a Pod disruption budget should be created
  create: false
  # -- Minimum number / percentage of pods that should remain scheduled
  minAvailable: 1
  # -- Maximum number / percentage of pods that may be made unavailable
  maxUnavailable: ""
## Prometheus exporter configuration
##
metrics:
  # -- Start a side-car prometheus exporter
  enabled: false
  ## Bitnami MySQL Prometheus exporter image
  ## ref: https://hub.docker.com/r/bitnami/mysqld-exporter/tags/
  ##
  image:
    # -- MariaDB Prometheus exporter image registry
    registry: docker.io
    # -- MariaDB Prometheus exporter image repository
    repository: bitnami/mysqld-exporter
    # -- MariaDB Prometheus exporter image tag (immutable tags are recommended)
    tag: 0.13.0-debian-10-r75
    # -- MariaDB Prometheus exporter image pull policy
    pullPolicy: IfNotPresent
    # -- MariaDB Prometheus exporter image pull secrets.
    # Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  # -- MariaDB Prometheus exporter additional command line flags
  ## Can be used to specify command line flags
  ## E.g.:
  ## extraFlags:
  ##   - --collect.binlog_size
  ##
  extraFlags: []
  ## MySQL Prometheus exporter containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ##
  resources:
    # -- The resources limits for the container
    ## Example:
    ## limits:
    ##    cpu: 0.5
    ##    memory: 256Mi
    limits: {}
    # -- The requested resources for the container
    ## Examples:
    ## requests:
    ##    cpu: 0.5
    ##    memory: 256Mi
    requests: {}
  ## MySQL Prometheus exporter service parameters
  ##
  service:
    # -- Prometheus exporter service type
    type: ClusterIP
    # -- Prometheus exporter service port
    port: 9104
    # -- Prometheus exporter service annotations
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9104"
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    # -- if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
    enabled: false
    # -- Optional namespace which Prometheus is running in
    namespace: ""
    # -- How frequently to scrape metrics (use by default, falling back to Prometheus' default)
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    interval: ""
    # -- Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    scrapeTimeout: ""
    # -- ServiceMonitor selector labels.
    # Default to kube-prometheus install (CoreOS recommended), but should be set according to Prometheus install.
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    selector:
      prometheus: kube-prometheus
    # -- RelabelConfigs to apply to samples before scraping
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ## Value is evalued as a template
    relabelings: []
    # -- MetricRelabelConfigs to apply to samples before ingestion
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ## Value is evalued as a template
    ## e.g:
    ##  - sourceLabels:
    ##      - "__name__"
    ##    targetLabel: "__name__"
    ##    action: replace
    ##    regex: '(.*)'
    ##    replacement: 'example_prefix_$1'
    ##
    metricRelabelings: []
  ## Prometheus Operator PrometheusRule configuration
  ##
  prometheusRules:
    # -- if `true`, creates a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true`, and makes little sense without ServiceMonitor)
    enabled: false
    # -- [object] Additional labels to add to the PrometheusRule so it is picked up by the operator
    # If using the [Helm Chart](https://github.com/helm/charts/tree/master/stable/prometheus-operator) this is the name of the Helm release and 'app: prometheus-operator'
    selector:
      app: prometheus-operator
      release: prometheus
    # -- PrometheusRule rules to configure
    ## e.g:
    ##  - alert: MariaDB-Down
    ##    annotations:
    ##      message: 'MariaDB instance {{ $labels.instance }} is down'
    ##      summary: MariaDB instance is down
    ##    expr: absent(up{job="mariadb-galera"} == 1)
    ##    labels:
    ##      severity: warning
    ##      service: mariadb-galera
    ##    for: 5m
    rules: {}
