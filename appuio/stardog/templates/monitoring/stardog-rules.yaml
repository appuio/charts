{{- if .Values.metrics.prometheusOperator }}
{{- $ns_selector :=  printf "namespace=\"%s\"" .Release.Namespace }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "stardog.fullname" . }}-rules
  labels:
    app.kubernetes.io/name: {{ include "stardog.name" . }}
    helm.sh/chart: {{ include "stardog.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    role: alert-rules
    {{- include "prometheusRules.extraLabels" .Values.metrics.stardogRules.extraLabels | indent 4 }}
spec:
  groups:
  - name: Stardog
    rules:
    - alert: StardogOpenConnections
      expr: databases_openConnections{ {{ $ns_selector }} } > 32
      for: 1m
      annotations:
        summary: Too many open connections
        description: Open connections for DB {{ "{{" }} $labels.database {{ "}}" }} on instance {{ "{{" }} $labels.pod {{ "}}" }} exeeded 32 ({{ "{{" }} $value {{ "}}" }}).
      labels:
        env: {{ .Release.Name }}
        app: stardog
        severity: critical
    - alert: StardogLicenseExpire
      expr: min(dbms_license_expiration{ {{ $ns_selector }} }) without (instance, pod) < 42
      for: 10m
      annotations:
        summary: Stardog license about to expire
        description: The Stardog license will expire in {{ "{{" }} $value {{ "}}" }} days.
      labels:
        env: {{ .Release.Name }}
        app: stardog
        severity: "{{ "{{ if lt $value 21.0 }}" }}critical{{ "{{ else }}" }}warning{{ "{{ end }}" }}"
    - alert: StardogPodsNotReady
      expr: kube_statefulset_status_replicas_ready{ {{ $ns_selector }}, statefulset="{{ include "stardog.fullname" . }}" } != {{ .Values.replicaCount }}
      for: 10m
      annotations:
        summary: Pods of Stardog StatefulSet not ready
        description: Only {{ "{{" }} $value {{ "}}" }} of {{ .Values.replicaCount }} Stardog pods are ready in namespace {{ "{{" }} $labels.namespace {{ "}}" }}.
      labels:
        env: {{ .Release.Name }}
        app: stardog
        severity: "{{ "{{ if lt $value 2.0 }}" }}critical{{ "{{ else }}" }}warning{{ "{{ end }}" }}"
    {{- if .Values.ingress.enabled }}
    - alert: HttpCheck
      expr: probe_success{instance="https://{{ .Values.ingress.host }}/admin/healthcheck"} != 1
      for: {{ default "1m" (((.Values.alerts).httpCheck).for) | quote }}
      annotations:
        summary: Http check failed
        description: "Http check failed on {{ "{{" }} $labels.instance {{ "}}" }}"
      labels:
        env: {{ .Release.Name }}
        severity: critical
        oncall: "{{ "{{ if eq $labels.env \\\"prod\\\" }}" }}true{{ "{{ else }}" }}false{{" {{ end }} "}}"
    - alert: CertExpirySoon
      expr: probe_ssl_earliest_cert_expiry{instance="https://{{ .Values.ingress.host }}/admin/healthcheck"} - time() < 86400 * 30
      for: 10m
      annotations:
        summary: SSL ertificate expires in less than 30 days
        description: "SSL certificate on {{ "{{" }} $labels.instance {{ "}}" }} expires is in less than 30 days"
      labels:
        env: {{ .Release.Name }}
        severity: warning
    {{- end }}
{{- end }}
